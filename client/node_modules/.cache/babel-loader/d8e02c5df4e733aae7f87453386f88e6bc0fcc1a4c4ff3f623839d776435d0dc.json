{"ast":null,"code":"import { useTheme } from \"./chunk-JVDTBYWX.js\";\nimport { buttonTheme } from \"./chunk-VYISNWQG.js\";\n\n// src/components/button.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport Ripple from \"material-ripple-effects\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonRoot({\n  as,\n  color,\n  variant,\n  size,\n  ripple,\n  isPill,\n  isFullWidth,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as || \"button\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.button ?? buttonTheme;\n  const defaultProps = theme?.defaultProps;\n  size ??= defaultProps?.size ?? \"md\";\n  ripple ??= defaultProps?.ripple ?? true;\n  color ??= defaultProps?.color ?? \"primary\";\n  variant ??= defaultProps?.variant ?? \"solid\";\n  isPill ??= defaultProps?.isPill ?? false;\n  isFullWidth ??= defaultProps?.isFullWidth ?? false;\n  const rippleEffect = ripple !== void 0 && new Ripple();\n  const handleClick = e => {\n    const onClick = props?.onClick;\n    const isDarkRipple = variant === \"ghost\" || color === \"secondary\";\n    if (ripple) {\n      rippleEffect.create(e, isDarkRipple ? \"dark\" : \"light\");\n    }\n    return typeof onClick === \"function\" && onClick(e);\n  };\n  const styles = twMerge(theme.baseStyle, theme[\"size\"][size], theme[\"variant\"][variant][color], className);\n  return /* @__PURE__ */jsx(Component, {\n    ...props,\n    ref,\n    className: styles,\n    onClick: handleClick,\n    \"data-shape\": isPill ? \"pill\" : \"default\",\n    \"data-width\": isFullWidth ? \"full\" : \"default\",\n    children\n  });\n}\nButtonRoot.displayName = \"MaterialTailwind.Button\";\nvar Button = React.forwardRef(ButtonRoot);\nvar button_default = Button;\nexport { Button, button_default };","map":{"version":3,"names":["useTheme","buttonTheme","React","twMerge","Ripple","jsx","ButtonRoot","as","color","variant","size","ripple","isPill","isFullWidth","className","children","props","ref","Component","contextTheme","theme","button","defaultProps","rippleEffect","handleClick","e","onClick","isDarkRipple","create","styles","baseStyle","displayName","Button","forwardRef","button_default"],"sources":["C:/Users/chris/Desktop/insite/node_modules/@material-tailwind/react/dist/chunk-RGPTN62M.js"],"sourcesContent":["import {\n  useTheme\n} from \"./chunk-JVDTBYWX.js\";\nimport {\n  buttonTheme\n} from \"./chunk-VYISNWQG.js\";\n\n// src/components/button.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport Ripple from \"material-ripple-effects\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonRoot({\n  as,\n  color,\n  variant,\n  size,\n  ripple,\n  isPill,\n  isFullWidth,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as || \"button\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.button ?? buttonTheme;\n  const defaultProps = theme?.defaultProps;\n  size ??= defaultProps?.size ?? \"md\";\n  ripple ??= defaultProps?.ripple ?? true;\n  color ??= defaultProps?.color ?? \"primary\";\n  variant ??= defaultProps?.variant ?? \"solid\";\n  isPill ??= defaultProps?.isPill ?? false;\n  isFullWidth ??= defaultProps?.isFullWidth ?? false;\n  const rippleEffect = ripple !== void 0 && new Ripple();\n  const handleClick = (e) => {\n    const onClick = props?.onClick;\n    const isDarkRipple = variant === \"ghost\" || color === \"secondary\";\n    if (ripple) {\n      rippleEffect.create(e, isDarkRipple ? \"dark\" : \"light\");\n    }\n    return typeof onClick === \"function\" && onClick(e);\n  };\n  const styles = twMerge(\n    theme.baseStyle,\n    theme[\"size\"][size],\n    theme[\"variant\"][variant][color],\n    className\n  );\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ...props,\n      ref,\n      className: styles,\n      onClick: handleClick,\n      \"data-shape\": isPill ? \"pill\" : \"default\",\n      \"data-width\": isFullWidth ? \"full\" : \"default\",\n      children\n    }\n  );\n}\nButtonRoot.displayName = \"MaterialTailwind.Button\";\nvar Button = React.forwardRef(ButtonRoot);\nvar button_default = Button;\n\nexport {\n  Button,\n  button_default\n};\n"],"mappings":"AAAA,SACEA,QAAQ,QACH,qBAAqB;AAC5B,SACEC,WAAW,QACN,qBAAqB;;AAE5B;AACA,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAUA,CAAC;EAClBC,EAAE;EACFC,KAAK;EACLC,OAAO;EACPC,IAAI;EACJC,MAAM;EACNC,MAAM;EACNC,WAAW;EACXC,SAAS;EACTC,QAAQ;EACR,GAAGC;AACL,CAAC,EAAEC,GAAG,EAAE;EACN,MAAMC,SAAS,GAAGX,EAAE,IAAI,QAAQ;EAChC,MAAMY,YAAY,GAAGnB,QAAQ,CAAC,CAAC;EAC/B,MAAMoB,KAAK,GAAGD,YAAY,EAAEE,MAAM,IAAIpB,WAAW;EACjD,MAAMqB,YAAY,GAAGF,KAAK,EAAEE,YAAY;EACxCZ,IAAI,KAAKY,YAAY,EAAEZ,IAAI,IAAI,IAAI;EACnCC,MAAM,KAAKW,YAAY,EAAEX,MAAM,IAAI,IAAI;EACvCH,KAAK,KAAKc,YAAY,EAAEd,KAAK,IAAI,SAAS;EAC1CC,OAAO,KAAKa,YAAY,EAAEb,OAAO,IAAI,OAAO;EAC5CG,MAAM,KAAKU,YAAY,EAAEV,MAAM,IAAI,KAAK;EACxCC,WAAW,KAAKS,YAAY,EAAET,WAAW,IAAI,KAAK;EAClD,MAAMU,YAAY,GAAGZ,MAAM,KAAK,KAAK,CAAC,IAAI,IAAIP,MAAM,CAAC,CAAC;EACtD,MAAMoB,WAAW,GAAIC,CAAC,IAAK;IACzB,MAAMC,OAAO,GAAGV,KAAK,EAAEU,OAAO;IAC9B,MAAMC,YAAY,GAAGlB,OAAO,KAAK,OAAO,IAAID,KAAK,KAAK,WAAW;IACjE,IAAIG,MAAM,EAAE;MACVY,YAAY,CAACK,MAAM,CAACH,CAAC,EAAEE,YAAY,GAAG,MAAM,GAAG,OAAO,CAAC;IACzD;IACA,OAAO,OAAOD,OAAO,KAAK,UAAU,IAAIA,OAAO,CAACD,CAAC,CAAC;EACpD,CAAC;EACD,MAAMI,MAAM,GAAG1B,OAAO,CACpBiB,KAAK,CAACU,SAAS,EACfV,KAAK,CAAC,MAAM,CAAC,CAACV,IAAI,CAAC,EACnBU,KAAK,CAAC,SAAS,CAAC,CAACX,OAAO,CAAC,CAACD,KAAK,CAAC,EAChCM,SACF,CAAC;EACD,OAAO,eAAgBT,GAAG,CACxBa,SAAS,EACT;IACE,GAAGF,KAAK;IACRC,GAAG;IACHH,SAAS,EAAEe,MAAM;IACjBH,OAAO,EAAEF,WAAW;IACpB,YAAY,EAAEZ,MAAM,GAAG,MAAM,GAAG,SAAS;IACzC,YAAY,EAAEC,WAAW,GAAG,MAAM,GAAG,SAAS;IAC9CE;EACF,CACF,CAAC;AACH;AACAT,UAAU,CAACyB,WAAW,GAAG,yBAAyB;AAClD,IAAIC,MAAM,GAAG9B,KAAK,CAAC+B,UAAU,CAAC3B,UAAU,CAAC;AACzC,IAAI4B,cAAc,GAAGF,MAAM;AAE3B,SACEA,MAAM,EACNE,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}