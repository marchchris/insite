{"ast":null,"code":"import { useTheme } from \"./chunk-JVDTBYWX.js\";\nimport { iconButtonTheme } from \"./chunk-LRNZTCBT.js\";\n\n// src/components/icon-button.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport Ripple from \"material-ripple-effects\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction IconButtonRoot({\n  as,\n  color,\n  variant,\n  size,\n  ripple,\n  isCircular,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as ?? \"button\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.iconButton ?? iconButtonTheme;\n  const defaultProps = theme?.defaultProps;\n  size ??= defaultProps?.size ?? \"md\";\n  ripple ??= defaultProps?.ripple ?? true;\n  color ??= defaultProps?.color ?? \"primary\";\n  variant ??= defaultProps?.variant ?? \"solid\";\n  isCircular ??= defaultProps?.isCircular ?? false;\n  const rippleEffect = ripple !== void 0 && new Ripple();\n  const handleClick = e => {\n    const onClick = props?.onClick;\n    const isDarkRipple = variant === \"ghost\" || color === \"secondary\";\n    if (ripple) {\n      rippleEffect.create(e, isDarkRipple ? \"dark\" : \"light\");\n    }\n    return typeof onClick === \"function\" && onClick(e);\n  };\n  const styles = twMerge(theme.baseStyle, theme[\"size\"][size], theme[\"variant\"][variant][color], className);\n  return /* @__PURE__ */jsx(Component, {\n    ...props,\n    ref,\n    className: styles,\n    onClick: handleClick,\n    \"data-shape\": isCircular ? \"circular\" : \"default\",\n    children\n  });\n}\nIconButtonRoot.displayName = \"MaterialTailwind.IconButton\";\nvar IconButton = React.forwardRef(IconButtonRoot);\nvar icon_button_default = IconButton;\nexport { IconButton, icon_button_default };","map":{"version":3,"names":["useTheme","iconButtonTheme","React","twMerge","Ripple","jsx","IconButtonRoot","as","color","variant","size","ripple","isCircular","className","children","props","ref","Component","contextTheme","theme","iconButton","defaultProps","rippleEffect","handleClick","e","onClick","isDarkRipple","create","styles","baseStyle","displayName","IconButton","forwardRef","icon_button_default"],"sources":["C:/Users/chris/Desktop/insite/node_modules/@material-tailwind/react/dist/chunk-ERVJILQN.js"],"sourcesContent":["import {\n  useTheme\n} from \"./chunk-JVDTBYWX.js\";\nimport {\n  iconButtonTheme\n} from \"./chunk-LRNZTCBT.js\";\n\n// src/components/icon-button.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport Ripple from \"material-ripple-effects\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction IconButtonRoot({\n  as,\n  color,\n  variant,\n  size,\n  ripple,\n  isCircular,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as ?? \"button\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.iconButton ?? iconButtonTheme;\n  const defaultProps = theme?.defaultProps;\n  size ??= defaultProps?.size ?? \"md\";\n  ripple ??= defaultProps?.ripple ?? true;\n  color ??= defaultProps?.color ?? \"primary\";\n  variant ??= defaultProps?.variant ?? \"solid\";\n  isCircular ??= defaultProps?.isCircular ?? false;\n  const rippleEffect = ripple !== void 0 && new Ripple();\n  const handleClick = (e) => {\n    const onClick = props?.onClick;\n    const isDarkRipple = variant === \"ghost\" || color === \"secondary\";\n    if (ripple) {\n      rippleEffect.create(e, isDarkRipple ? \"dark\" : \"light\");\n    }\n    return typeof onClick === \"function\" && onClick(e);\n  };\n  const styles = twMerge(\n    theme.baseStyle,\n    theme[\"size\"][size],\n    theme[\"variant\"][variant][color],\n    className\n  );\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ...props,\n      ref,\n      className: styles,\n      onClick: handleClick,\n      \"data-shape\": isCircular ? \"circular\" : \"default\",\n      children\n    }\n  );\n}\nIconButtonRoot.displayName = \"MaterialTailwind.IconButton\";\nvar IconButton = React.forwardRef(IconButtonRoot);\nvar icon_button_default = IconButton;\n\nexport {\n  IconButton,\n  icon_button_default\n};\n"],"mappings":"AAAA,SACEA,QAAQ,QACH,qBAAqB;AAC5B,SACEC,eAAe,QACV,qBAAqB;;AAE5B;AACA,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,cAAcA,CAAC;EACtBC,EAAE;EACFC,KAAK;EACLC,OAAO;EACPC,IAAI;EACJC,MAAM;EACNC,UAAU;EACVC,SAAS;EACTC,QAAQ;EACR,GAAGC;AACL,CAAC,EAAEC,GAAG,EAAE;EACN,MAAMC,SAAS,GAAGV,EAAE,IAAI,QAAQ;EAChC,MAAMW,YAAY,GAAGlB,QAAQ,CAAC,CAAC;EAC/B,MAAMmB,KAAK,GAAGD,YAAY,EAAEE,UAAU,IAAInB,eAAe;EACzD,MAAMoB,YAAY,GAAGF,KAAK,EAAEE,YAAY;EACxCX,IAAI,KAAKW,YAAY,EAAEX,IAAI,IAAI,IAAI;EACnCC,MAAM,KAAKU,YAAY,EAAEV,MAAM,IAAI,IAAI;EACvCH,KAAK,KAAKa,YAAY,EAAEb,KAAK,IAAI,SAAS;EAC1CC,OAAO,KAAKY,YAAY,EAAEZ,OAAO,IAAI,OAAO;EAC5CG,UAAU,KAAKS,YAAY,EAAET,UAAU,IAAI,KAAK;EAChD,MAAMU,YAAY,GAAGX,MAAM,KAAK,KAAK,CAAC,IAAI,IAAIP,MAAM,CAAC,CAAC;EACtD,MAAMmB,WAAW,GAAIC,CAAC,IAAK;IACzB,MAAMC,OAAO,GAAGV,KAAK,EAAEU,OAAO;IAC9B,MAAMC,YAAY,GAAGjB,OAAO,KAAK,OAAO,IAAID,KAAK,KAAK,WAAW;IACjE,IAAIG,MAAM,EAAE;MACVW,YAAY,CAACK,MAAM,CAACH,CAAC,EAAEE,YAAY,GAAG,MAAM,GAAG,OAAO,CAAC;IACzD;IACA,OAAO,OAAOD,OAAO,KAAK,UAAU,IAAIA,OAAO,CAACD,CAAC,CAAC;EACpD,CAAC;EACD,MAAMI,MAAM,GAAGzB,OAAO,CACpBgB,KAAK,CAACU,SAAS,EACfV,KAAK,CAAC,MAAM,CAAC,CAACT,IAAI,CAAC,EACnBS,KAAK,CAAC,SAAS,CAAC,CAACV,OAAO,CAAC,CAACD,KAAK,CAAC,EAChCK,SACF,CAAC;EACD,OAAO,eAAgBR,GAAG,CACxBY,SAAS,EACT;IACE,GAAGF,KAAK;IACRC,GAAG;IACHH,SAAS,EAAEe,MAAM;IACjBH,OAAO,EAAEF,WAAW;IACpB,YAAY,EAAEX,UAAU,GAAG,UAAU,GAAG,SAAS;IACjDE;EACF,CACF,CAAC;AACH;AACAR,cAAc,CAACwB,WAAW,GAAG,6BAA6B;AAC1D,IAAIC,UAAU,GAAG7B,KAAK,CAAC8B,UAAU,CAAC1B,cAAc,CAAC;AACjD,IAAI2B,mBAAmB,GAAGF,UAAU;AAEpC,SACEA,UAAU,EACVE,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}