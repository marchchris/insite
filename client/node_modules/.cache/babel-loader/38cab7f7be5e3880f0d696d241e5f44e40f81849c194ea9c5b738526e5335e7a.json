{"ast":null,"code":"import { useTheme } from \"./chunk-JVDTBYWX.js\";\nimport { checkboxIndicatorTheme, checkboxTheme } from \"./chunk-YVCLQOWL.js\";\n\n// src/components/checkbox.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CheckboxContext = React.createContext({\n  color: \"primary\",\n  disabled: false,\n  checked: false\n});\nfunction CheckboxRootBase({\n  color,\n  disabled,\n  className,\n  children,\n  ...props\n}, ref) {\n  const contextTheme = useTheme();\n  const theme = contextTheme?.checkbox ?? checkboxTheme;\n  const defaultProps = theme?.defaultProps;\n  const innerId = React.useId();\n  const [checked, setChecked] = React.useState(props?.checked || false);\n  color ??= defaultProps?.color ?? \"primary\";\n  const styles = twMerge(theme.baseStyle, theme.color[color], className);\n  React.useEffect(() => {\n    if (props?.defaultChecked) {\n      setChecked(props?.defaultChecked);\n    }\n  }, []);\n  const contextValue = React.useMemo(() => ({\n    color,\n    checked,\n    disabled\n  }), [color, checked, disabled]);\n  return /* @__PURE__ */jsxs(\"label\", {\n    ref,\n    className: styles,\n    \"data-checked\": checked,\n    \"aria-disabled\": disabled,\n    htmlFor: props?.id || innerId,\n    children: [/* @__PURE__ */jsx(\"input\", {\n      ...props,\n      id: props?.id || innerId,\n      type: \"checkbox\",\n      checked: props?.defaultChecked ? void 0 : props?.checked || checked,\n      onChange: e => {\n        props?.onChange?.(e);\n        setChecked(cur => !cur);\n      },\n      style: {\n        display: \"none\"\n      }\n    }), /* @__PURE__ */jsx(CheckboxContext.Provider, {\n      value: contextValue,\n      children\n    })]\n  });\n}\nCheckboxRootBase.displayName = \"MaterialTailwind.Checkbox\";\nvar CheckboxRoot = React.forwardRef(CheckboxRootBase);\nfunction CheckboxIndicatorRoot({\n  as,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as || \"span\";\n  const contextTheme = useTheme();\n  const {\n    checked\n  } = React.useContext(CheckboxContext);\n  const theme = contextTheme?.checkboxIndicator ?? checkboxIndicatorTheme;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */jsx(Component, {\n    ...props,\n    \"data-checked\": checked,\n    className: styles,\n    ref,\n    children: children || /* @__PURE__ */jsx(\"svg\", {\n      fill: \"none\",\n      width: \"18px\",\n      height: \"18px\",\n      strokeWidth: \"2\",\n      color: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */jsx(\"path\", {\n        d: \"M5 13L9 17L19 7\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      })\n    })\n  });\n}\nCheckboxIndicatorRoot.displayName = \"MaterialTailwind.CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(CheckboxIndicatorRoot);\nvar Checkbox = Object.assign(CheckboxRoot, {\n  Indicator: CheckboxIndicator\n});\nvar checkbox_default = Checkbox;\nexport { CheckboxContext, CheckboxRoot, CheckboxIndicator, Checkbox, checkbox_default };","map":{"version":3,"names":["useTheme","checkboxIndicatorTheme","checkboxTheme","React","twMerge","jsx","jsxs","CheckboxContext","createContext","color","disabled","checked","CheckboxRootBase","className","children","props","ref","contextTheme","theme","checkbox","defaultProps","innerId","useId","setChecked","useState","styles","baseStyle","useEffect","defaultChecked","contextValue","useMemo","htmlFor","id","type","onChange","e","cur","style","display","Provider","value","displayName","CheckboxRoot","forwardRef","CheckboxIndicatorRoot","as","Component","useContext","checkboxIndicator","fill","width","height","strokeWidth","viewBox","xmlns","d","stroke","strokeLinecap","strokeLinejoin","CheckboxIndicator","Checkbox","Object","assign","Indicator","checkbox_default"],"sources":["C:/Users/chris/Desktop/insite/node_modules/@material-tailwind/react/dist/chunk-RWVEEWUM.js"],"sourcesContent":["import {\n  useTheme\n} from \"./chunk-JVDTBYWX.js\";\nimport {\n  checkboxIndicatorTheme,\n  checkboxTheme\n} from \"./chunk-YVCLQOWL.js\";\n\n// src/components/checkbox.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CheckboxContext = React.createContext({\n  color: \"primary\",\n  disabled: false,\n  checked: false\n});\nfunction CheckboxRootBase({ color, disabled, className, children, ...props }, ref) {\n  const contextTheme = useTheme();\n  const theme = contextTheme?.checkbox ?? checkboxTheme;\n  const defaultProps = theme?.defaultProps;\n  const innerId = React.useId();\n  const [checked, setChecked] = React.useState(props?.checked || false);\n  color ??= defaultProps?.color ?? \"primary\";\n  const styles = twMerge(theme.baseStyle, theme.color[color], className);\n  React.useEffect(() => {\n    if (props?.defaultChecked) {\n      setChecked(props?.defaultChecked);\n    }\n  }, []);\n  const contextValue = React.useMemo(\n    () => ({\n      color,\n      checked,\n      disabled\n    }),\n    [color, checked, disabled]\n  );\n  return /* @__PURE__ */ jsxs(\n    \"label\",\n    {\n      ref,\n      className: styles,\n      \"data-checked\": checked,\n      \"aria-disabled\": disabled,\n      htmlFor: props?.id || innerId,\n      children: [\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            ...props,\n            id: props?.id || innerId,\n            type: \"checkbox\",\n            checked: props?.defaultChecked ? void 0 : props?.checked || checked,\n            onChange: (e) => {\n              props?.onChange?.(e);\n              setChecked((cur) => !cur);\n            },\n            style: { display: \"none\" }\n          }\n        ),\n        /* @__PURE__ */ jsx(CheckboxContext.Provider, { value: contextValue, children })\n      ]\n    }\n  );\n}\nCheckboxRootBase.displayName = \"MaterialTailwind.Checkbox\";\nvar CheckboxRoot = React.forwardRef(CheckboxRootBase);\nfunction CheckboxIndicatorRoot({ as, className, children, ...props }, ref) {\n  const Component = as || \"span\";\n  const contextTheme = useTheme();\n  const { checked } = React.useContext(CheckboxContext);\n  const theme = contextTheme?.checkboxIndicator ?? checkboxIndicatorTheme;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */ jsx(Component, { ...props, \"data-checked\": checked, className: styles, ref, children: children || /* @__PURE__ */ jsx(\n    \"svg\",\n    {\n      fill: \"none\",\n      width: \"18px\",\n      height: \"18px\",\n      strokeWidth: \"2\",\n      color: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          d: \"M5 13L9 17L19 7\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  ) });\n}\nCheckboxIndicatorRoot.displayName = \"MaterialTailwind.CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(CheckboxIndicatorRoot);\nvar Checkbox = Object.assign(CheckboxRoot, {\n  Indicator: CheckboxIndicator\n});\nvar checkbox_default = Checkbox;\n\nexport {\n  CheckboxContext,\n  CheckboxRoot,\n  CheckboxIndicator,\n  Checkbox,\n  checkbox_default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}