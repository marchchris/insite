{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\insite\\\\client\\\\src\\\\components\\\\barChart.jsx\";\nimport React from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedbackAmountChart({\n  feedbackData\n}) {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const feedbackPerMonth = new Array(12).fill(0);\n  feedbackData.forEach(fb => {\n    const month = new Date(fb.dateSubmitted).getMonth();\n    feedbackPerMonth[month]++;\n  });\n  const data = {\n    labels: months,\n    datasets: [{\n      data: feedbackPerMonth,\n      backgroundColor: ['#9F9FF8', '#96E2D6', '#92BFFF', '#AEC7ED', '#94E9B8', '#9F9FF8', '#96E2D6', '#92BFFF', '#AEC7ED', '#94E9B8', '#9F9FF8', '#96E2D6'],\n      borderWidth: 0,\n      borderRadius: 8\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.4)'\n        }\n      },\n      y: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.4)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItem) {\n          return tooltipItem.yLabel;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_c = FeedbackAmountChart;\n;\nvar _c;\n$RefreshReg$(_c, \"FeedbackAmountChart\");","map":{"version":3,"names":["React","Chart","Bar","jsxDEV","_jsxDEV","FeedbackAmountChart","feedbackData","months","feedbackPerMonth","Array","fill","forEach","fb","month","Date","dateSubmitted","getMonth","data","labels","datasets","backgroundColor","borderWidth","borderRadius","options","scales","x","grid","display","ticks","color","y","plugins","legend","tooltips","callbacks","label","tooltipItem","yLabel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/insite/client/src/components/barChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Chart } from \"chart.js/auto\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nexport default function FeedbackAmountChart({ feedbackData }) {\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const feedbackPerMonth = new Array(12).fill(0);\r\n\r\n    feedbackData.forEach(fb => {\r\n        const month = new Date(fb.dateSubmitted).getMonth();\r\n        feedbackPerMonth[month]++;\r\n    });\r\n\r\n    const data = {\r\n        labels: months,\r\n        datasets: [{\r\n            data: feedbackPerMonth,\r\n            backgroundColor: [\r\n                '#9F9FF8',\r\n                '#96E2D6',\r\n                '#92BFFF',\r\n                '#AEC7ED',\r\n                '#94E9B8',\r\n                '#9F9FF8',\r\n                '#96E2D6',\r\n                '#92BFFF',\r\n                '#AEC7ED',\r\n                '#94E9B8',\r\n                '#9F9FF8',\r\n                '#96E2D6',\r\n            ],\r\n            borderWidth: 0,\r\n            borderRadius: 8\r\n        }]\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                    display: false\r\n                },\r\n                ticks: {\r\n                    color: 'rgba(255, 255, 255, 0.4)'\r\n                }\r\n            },\r\n            y: {\r\n                grid: {\r\n                    display: false\r\n                },\r\n                ticks: {\r\n                    color: 'rgba(255, 255, 255, 0.4)'\r\n                }\r\n            }\r\n        },\r\n\r\n        plugins: {\r\n            legend: {\r\n                display: false\r\n            }\r\n        },\r\n\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function (tooltipItem) {\r\n                    return tooltipItem.yLabel;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Bar data={data} options={options} />\r\n    );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,mBAAmBA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAC1D,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EACzI,MAAMC,gBAAgB,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAE9CJ,YAAY,CAACK,OAAO,CAACC,EAAE,IAAI;IACvB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACF,EAAE,CAACG,aAAa,CAAC,CAACC,QAAQ,CAAC,CAAC;IACnDR,gBAAgB,CAACK,KAAK,CAAC,EAAE;EAC7B,CAAC,CAAC;EAEF,MAAMI,IAAI,GAAG;IACTC,MAAM,EAAEX,MAAM;IACdY,QAAQ,EAAE,CAAC;MACPF,IAAI,EAAET,gBAAgB;MACtBY,eAAe,EAAE,CACb,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACZ;MACDC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,IAAI,EAAE;UACFC,OAAO,EAAE;QACb,CAAC;QACDC,KAAK,EAAE;UACHC,KAAK,EAAE;QACX;MACJ,CAAC;MACDC,CAAC,EAAE;QACCJ,IAAI,EAAE;UACFC,OAAO,EAAE;QACb,CAAC;QACDC,KAAK,EAAE;UACHC,KAAK,EAAE;QACX;MACJ;IACJ,CAAC;IAEDE,OAAO,EAAE;MACLC,MAAM,EAAE;QACJL,OAAO,EAAE;MACb;IACJ,CAAC;IAEDM,QAAQ,EAAE;MACNC,SAAS,EAAE;QACPC,KAAK,EAAE,SAAAA,CAAUC,WAAW,EAAE;UAC1B,OAAOA,WAAW,CAACC,MAAM;QAC7B;MACJ;IACJ;EACJ,CAAC;EAED,oBACIjC,OAAA,CAACF,GAAG;IAACe,IAAI,EAAEA,IAAK;IAACM,OAAO,EAAEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE7C;AAACC,EAAA,GAtEuBrC,mBAAmB;AAsE1C;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}