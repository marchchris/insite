{"ast":null,"code":"import { useTheme } from \"./chunk-JVDTBYWX.js\";\nimport { accordionContentTheme, accordionItemTheme, accordionTheme, accordionTriggerTheme } from \"./chunk-C4GS2FOC.js\";\n\n// src/components/accordion.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionContext = React.createContext({\n  type: \"single\",\n  activeItem: \"\",\n  setActiveItem: () => {}\n});\nfunction AccordionRoot({\n  type,\n  value,\n  defaultValue,\n  onValueChange,\n  children\n}) {\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordion || accordionTheme;\n  const defaultProps = theme?.defaultProps;\n  type ??= defaultProps?.type ?? \"single\";\n  const accordionValue = value || defaultValue;\n  const [uncontrolledActiveItem, setUncontrolledActiveItem] = React.useState(\"\");\n  const activeItem = value || uncontrolledActiveItem;\n  const setActiveItem = onValueChange || setUncontrolledActiveItem;\n  React.useEffect(() => {\n    setActiveItem(accordionValue);\n  }, [accordionValue]);\n  const contextValue = React.useMemo(() => ({\n    type,\n    activeItem,\n    setActiveItem\n  }), [type, activeItem, setActiveItem]);\n  return /* @__PURE__ */jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children\n  });\n}\nAccordionRoot.displayName = \"MaterialTailwind.Accordion\";\nvar AccordionItemContext = React.createContext(\"\");\nfunction AccordionItemRoot({\n  as,\n  value,\n  disabled,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as || \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordionItem || accordionItemTheme;\n  const defaultProps = theme?.defaultProps;\n  const {\n    type,\n    activeItem\n  } = React.useContext(AccordionContext);\n  disabled ??= defaultProps?.disabled ?? false;\n  const isMultiple = type === \"multiple\";\n  const isOpen = isMultiple ? activeItem?.includes(value) : activeItem === value;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */jsx(AccordionItemContext.Provider, {\n    value,\n    children: /* @__PURE__ */jsx(Component, {\n      ...props,\n      ref,\n      \"data-open\": isOpen,\n      className: styles,\n      \"aria-disabled\": disabled,\n      children\n    })\n  });\n}\nAccordionItemRoot.displayName = \"MaterialTailwind.AccordionItem\";\nvar AccordionItem = React.forwardRef(AccordionItemRoot);\nfunction AccordionTriggerRoot({\n  as,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as || \"button\";\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordionTrigger || accordionTriggerTheme;\n  const value = React.useContext(AccordionItemContext);\n  const {\n    type,\n    activeItem,\n    setActiveItem\n  } = React.useContext(AccordionContext);\n  const isMultiple = type === \"multiple\";\n  const isOpen = isMultiple ? activeItem?.includes(value) : activeItem === value;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */jsx(Component, {\n    ...props,\n    ref,\n    \"data-open\": isOpen,\n    className: styles,\n    onClick: event => {\n      if (isMultiple) {\n        if (activeItem?.includes(value)) {\n          setActiveItem?.(prev => prev.filter(item => item !== value));\n        } else {\n          setActiveItem?.(prev => [...prev, value]);\n        }\n      } else {\n        setActiveItem?.(prev => prev === value ? \"\" : value);\n      }\n      props.onClick?.(event);\n    },\n    children\n  });\n}\nAccordionTriggerRoot.displayName = \"MaterialTailwind.AccordionTrigger\";\nvar AccordionTrigger = React.forwardRef(AccordionTriggerRoot);\nfunction AccordionContentRoot({\n  as,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as || \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordionContent || accordionContentTheme;\n  const value = React.useContext(AccordionItemContext);\n  const {\n    type,\n    activeItem\n  } = React.useContext(AccordionContext);\n  const isMultiple = type === \"multiple\";\n  const isOpen = isMultiple ? activeItem?.includes(value) : activeItem === value;\n  const styles = twMerge(theme.baseStyle, className);\n  return isOpen ? /* @__PURE__ */jsx(Component, {\n    ...props,\n    ref,\n    className: styles,\n    \"data-open\": isOpen,\n    children\n  }) : null;\n}\nAccordionContentRoot.displayName = \"MaterialTailwind.AccordionContent\";\nvar AccordionContent = React.forwardRef(AccordionContentRoot);\nvar Accordion = Object.assign(AccordionRoot, {\n  Item: AccordionItem,\n  Trigger: AccordionTrigger,\n  Content: AccordionContent\n});\nvar accordion_default = Accordion;\nexport { AccordionContext, AccordionRoot, AccordionItemContext, AccordionItem, AccordionTrigger, AccordionContent, Accordion, accordion_default };","map":{"version":3,"names":["useTheme","accordionContentTheme","accordionItemTheme","accordionTheme","accordionTriggerTheme","React","twMerge","jsx","AccordionContext","createContext","type","activeItem","setActiveItem","AccordionRoot","value","defaultValue","onValueChange","children","contextTheme","theme","accordion","defaultProps","accordionValue","uncontrolledActiveItem","setUncontrolledActiveItem","useState","useEffect","contextValue","useMemo","Provider","displayName","AccordionItemContext","AccordionItemRoot","as","disabled","className","props","ref","Component","accordionItem","useContext","isMultiple","isOpen","includes","styles","baseStyle","AccordionItem","forwardRef","AccordionTriggerRoot","accordionTrigger","onClick","event","prev","filter","item","AccordionTrigger","AccordionContentRoot","accordionContent","AccordionContent","Accordion","Object","assign","Item","Trigger","Content","accordion_default"],"sources":["C:/Users/chris/Desktop/insite/node_modules/@material-tailwind/react/dist/chunk-YK3RJFJS.js"],"sourcesContent":["import {\n  useTheme\n} from \"./chunk-JVDTBYWX.js\";\nimport {\n  accordionContentTheme,\n  accordionItemTheme,\n  accordionTheme,\n  accordionTriggerTheme\n} from \"./chunk-C4GS2FOC.js\";\n\n// src/components/accordion.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionContext = React.createContext({\n  type: \"single\",\n  activeItem: \"\",\n  setActiveItem: () => {\n  }\n});\nfunction AccordionRoot({\n  type,\n  value,\n  defaultValue,\n  onValueChange,\n  children\n}) {\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordion || accordionTheme;\n  const defaultProps = theme?.defaultProps;\n  type ??= defaultProps?.type ?? \"single\";\n  const accordionValue = value || defaultValue;\n  const [uncontrolledActiveItem, setUncontrolledActiveItem] = React.useState(\"\");\n  const activeItem = value || uncontrolledActiveItem;\n  const setActiveItem = onValueChange || setUncontrolledActiveItem;\n  React.useEffect(() => {\n    setActiveItem(accordionValue);\n  }, [accordionValue]);\n  const contextValue = React.useMemo(\n    () => ({\n      type,\n      activeItem,\n      setActiveItem\n    }),\n    [type, activeItem, setActiveItem]\n  );\n  return /* @__PURE__ */ jsx(AccordionContext.Provider, { value: contextValue, children });\n}\nAccordionRoot.displayName = \"MaterialTailwind.Accordion\";\nvar AccordionItemContext = React.createContext(\"\");\nfunction AccordionItemRoot({ as, value, disabled, className, children, ...props }, ref) {\n  const Component = as || \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordionItem || accordionItemTheme;\n  const defaultProps = theme?.defaultProps;\n  const { type, activeItem } = React.useContext(AccordionContext);\n  disabled ??= defaultProps?.disabled ?? false;\n  const isMultiple = type === \"multiple\";\n  const isOpen = isMultiple ? activeItem?.includes(value) : activeItem === value;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */ jsx(AccordionItemContext.Provider, { value, children: /* @__PURE__ */ jsx(\n    Component,\n    {\n      ...props,\n      ref,\n      \"data-open\": isOpen,\n      className: styles,\n      \"aria-disabled\": disabled,\n      children\n    }\n  ) });\n}\nAccordionItemRoot.displayName = \"MaterialTailwind.AccordionItem\";\nvar AccordionItem = React.forwardRef(AccordionItemRoot);\nfunction AccordionTriggerRoot({ as, className, children, ...props }, ref) {\n  const Component = as || \"button\";\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordionTrigger || accordionTriggerTheme;\n  const value = React.useContext(AccordionItemContext);\n  const { type, activeItem, setActiveItem } = React.useContext(AccordionContext);\n  const isMultiple = type === \"multiple\";\n  const isOpen = isMultiple ? activeItem?.includes(value) : activeItem === value;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ...props,\n      ref,\n      \"data-open\": isOpen,\n      className: styles,\n      onClick: (event) => {\n        if (isMultiple) {\n          if (activeItem?.includes(value)) {\n            setActiveItem?.(\n              (prev) => prev.filter((item) => item !== value)\n            );\n          } else {\n            setActiveItem?.((prev) => [...prev, value]);\n          }\n        } else {\n          setActiveItem?.((prev) => prev === value ? \"\" : value);\n        }\n        props.onClick?.(event);\n      },\n      children\n    }\n  );\n}\nAccordionTriggerRoot.displayName = \"MaterialTailwind.AccordionTrigger\";\nvar AccordionTrigger = React.forwardRef(AccordionTriggerRoot);\nfunction AccordionContentRoot({ as, className, children, ...props }, ref) {\n  const Component = as || \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme.accordionContent || accordionContentTheme;\n  const value = React.useContext(AccordionItemContext);\n  const { type, activeItem } = React.useContext(AccordionContext);\n  const isMultiple = type === \"multiple\";\n  const isOpen = isMultiple ? activeItem?.includes(value) : activeItem === value;\n  const styles = twMerge(theme.baseStyle, className);\n  return isOpen ? /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, \"data-open\": isOpen, children }) : null;\n}\nAccordionContentRoot.displayName = \"MaterialTailwind.AccordionContent\";\nvar AccordionContent = React.forwardRef(AccordionContentRoot);\nvar Accordion = Object.assign(AccordionRoot, {\n  Item: AccordionItem,\n  Trigger: AccordionTrigger,\n  Content: AccordionContent\n});\nvar accordion_default = Accordion;\n\nexport {\n  AccordionContext,\n  AccordionRoot,\n  AccordionItemContext,\n  AccordionItem,\n  AccordionTrigger,\n  AccordionContent,\n  Accordion,\n  accordion_default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}