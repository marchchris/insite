{"ast":null,"code":"import { useTheme } from \"./chunk-JVDTBYWX.js\";\nimport { badgeContentTheme, badgeIndicatorTheme, badgeTheme } from \"./chunk-V2YBIGWT.js\";\n\n// src/components/badge.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { jsx } from \"react/jsx-runtime\";\nvar BadgeContext = React.createContext({\n  color: \"primary\",\n  overlap: \"square\",\n  placement: \"top-end\"\n});\nfunction BadgeRootBase({\n  as,\n  color,\n  overlap,\n  placement,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as ?? \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.badge ?? badgeTheme;\n  const defaultProps = theme?.defaultProps;\n  color ??= defaultProps?.color ?? \"primary\";\n  overlap ??= defaultProps?.overlap ?? \"square\";\n  placement ??= defaultProps?.placement ?? \"top-end\";\n  const styles = twMerge(theme.baseStyle, className);\n  const contextValue = React.useMemo(() => ({\n    color,\n    overlap,\n    placement\n  }), [color, overlap, placement]);\n  return /* @__PURE__ */jsx(Component, {\n    ...props,\n    ref,\n    className: styles,\n    children: /* @__PURE__ */jsx(BadgeContext.Provider, {\n      value: contextValue,\n      children\n    })\n  });\n}\nBadgeRootBase.displayName = \"MaterialTailwind.Badge\";\nvar BadgeRoot = React.forwardRef(BadgeRootBase);\nfunction BadgeContentRoot({\n  as,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as ?? \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.badgeContent ?? badgeContentTheme;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */jsx(Component, {\n    ...props,\n    ref,\n    className: styles,\n    children\n  });\n}\nBadgeContentRoot.displayName = \"MaterialTailwind.BadgeContent\";\nvar BadgeContent = React.forwardRef(BadgeContentRoot);\nfunction BadgeIndicatorRoot({\n  as,\n  className,\n  children,\n  ...props\n}, ref) {\n  const Component = as ?? \"span\";\n  const contextTheme = useTheme();\n  const {\n    overlap,\n    placement,\n    color\n  } = React.useContext(BadgeContext);\n  const theme = contextTheme?.badgeIndicator ?? badgeIndicatorTheme;\n  const styles = twMerge(theme.baseStyle, theme.color[color || \"primary\"], className);\n  return /* @__PURE__ */jsx(Component, {\n    ...props,\n    ref,\n    className: styles,\n    \"data-overlap\": overlap,\n    \"data-placement\": placement,\n    children\n  });\n}\nBadgeIndicatorRoot.displayName = \"MaterialTailwind.BadgeIndicator\";\nvar BadgeIndicator = React.forwardRef(BadgeIndicatorRoot);\nvar Badge = Object.assign(BadgeRoot, {\n  Content: BadgeContent,\n  Indicator: BadgeIndicator\n});\nvar badge_default = Badge;\nexport { BadgeContext, BadgeContent, BadgeIndicator, Badge, badge_default };","map":{"version":3,"names":["useTheme","badgeContentTheme","badgeIndicatorTheme","badgeTheme","React","twMerge","jsx","BadgeContext","createContext","color","overlap","placement","BadgeRootBase","as","className","children","props","ref","Component","contextTheme","theme","badge","defaultProps","styles","baseStyle","contextValue","useMemo","Provider","value","displayName","BadgeRoot","forwardRef","BadgeContentRoot","badgeContent","BadgeContent","BadgeIndicatorRoot","useContext","badgeIndicator","BadgeIndicator","Badge","Object","assign","Content","Indicator","badge_default"],"sources":["C:/Users/chris/Desktop/insite/node_modules/@material-tailwind/react/dist/chunk-G5X27O3A.js"],"sourcesContent":["import {\n  useTheme\n} from \"./chunk-JVDTBYWX.js\";\nimport {\n  badgeContentTheme,\n  badgeIndicatorTheme,\n  badgeTheme\n} from \"./chunk-V2YBIGWT.js\";\n\n// src/components/badge.tsx\nimport * as React from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { jsx } from \"react/jsx-runtime\";\nvar BadgeContext = React.createContext({\n  color: \"primary\",\n  overlap: \"square\",\n  placement: \"top-end\"\n});\nfunction BadgeRootBase({ as, color, overlap, placement, className, children, ...props }, ref) {\n  const Component = as ?? \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.badge ?? badgeTheme;\n  const defaultProps = theme?.defaultProps;\n  color ??= defaultProps?.color ?? \"primary\";\n  overlap ??= defaultProps?.overlap ?? \"square\";\n  placement ??= defaultProps?.placement ?? \"top-end\";\n  const styles = twMerge(theme.baseStyle, className);\n  const contextValue = React.useMemo(\n    () => ({\n      color,\n      overlap,\n      placement\n    }),\n    [color, overlap, placement]\n  );\n  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children: /* @__PURE__ */ jsx(BadgeContext.Provider, { value: contextValue, children }) });\n}\nBadgeRootBase.displayName = \"MaterialTailwind.Badge\";\nvar BadgeRoot = React.forwardRef(BadgeRootBase);\nfunction BadgeContentRoot({ as, className, children, ...props }, ref) {\n  const Component = as ?? \"div\";\n  const contextTheme = useTheme();\n  const theme = contextTheme?.badgeContent ?? badgeContentTheme;\n  const styles = twMerge(theme.baseStyle, className);\n  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children });\n}\nBadgeContentRoot.displayName = \"MaterialTailwind.BadgeContent\";\nvar BadgeContent = React.forwardRef(BadgeContentRoot);\nfunction BadgeIndicatorRoot({ as, className, children, ...props }, ref) {\n  const Component = as ?? \"span\";\n  const contextTheme = useTheme();\n  const { overlap, placement, color } = React.useContext(BadgeContext);\n  const theme = contextTheme?.badgeIndicator ?? badgeIndicatorTheme;\n  const styles = twMerge(\n    theme.baseStyle,\n    theme.color[color || \"primary\"],\n    className\n  );\n  return /* @__PURE__ */ jsx(\n    Component,\n    {\n      ...props,\n      ref,\n      className: styles,\n      \"data-overlap\": overlap,\n      \"data-placement\": placement,\n      children\n    }\n  );\n}\nBadgeIndicatorRoot.displayName = \"MaterialTailwind.BadgeIndicator\";\nvar BadgeIndicator = React.forwardRef(BadgeIndicatorRoot);\nvar Badge = Object.assign(BadgeRoot, {\n  Content: BadgeContent,\n  Indicator: BadgeIndicator\n});\nvar badge_default = Badge;\n\nexport {\n  BadgeContext,\n  BadgeContent,\n  BadgeIndicator,\n  Badge,\n  badge_default\n};\n"],"mappings":"AAAA,SACEA,QAAQ,QACH,qBAAqB;AAC5B,SACEC,iBAAiB,EACjBC,mBAAmB,EACnBC,UAAU,QACL,qBAAqB;;AAE5B;AACA,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,GAAG,QAAQ,mBAAmB;AACvC,IAAIC,YAAY,GAAGH,KAAK,CAACI,aAAa,CAAC;EACrCC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE,QAAQ;EACjBC,SAAS,EAAE;AACb,CAAC,CAAC;AACF,SAASC,aAAaA,CAAC;EAAEC,EAAE;EAAEJ,KAAK;EAAEC,OAAO;EAAEC,SAAS;EAAEG,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,EAAE;EAC5F,MAAMC,SAAS,GAAGL,EAAE,IAAI,KAAK;EAC7B,MAAMM,YAAY,GAAGnB,QAAQ,CAAC,CAAC;EAC/B,MAAMoB,KAAK,GAAGD,YAAY,EAAEE,KAAK,IAAIlB,UAAU;EAC/C,MAAMmB,YAAY,GAAGF,KAAK,EAAEE,YAAY;EACxCb,KAAK,KAAKa,YAAY,EAAEb,KAAK,IAAI,SAAS;EAC1CC,OAAO,KAAKY,YAAY,EAAEZ,OAAO,IAAI,QAAQ;EAC7CC,SAAS,KAAKW,YAAY,EAAEX,SAAS,IAAI,SAAS;EAClD,MAAMY,MAAM,GAAGlB,OAAO,CAACe,KAAK,CAACI,SAAS,EAAEV,SAAS,CAAC;EAClD,MAAMW,YAAY,GAAGrB,KAAK,CAACsB,OAAO,CAChC,OAAO;IACLjB,KAAK;IACLC,OAAO;IACPC;EACF,CAAC,CAAC,EACF,CAACF,KAAK,EAAEC,OAAO,EAAEC,SAAS,CAC5B,CAAC;EACD,OAAO,eAAgBL,GAAG,CAACY,SAAS,EAAE;IAAE,GAAGF,KAAK;IAAEC,GAAG;IAAEH,SAAS,EAAES,MAAM;IAAER,QAAQ,EAAE,eAAgBT,GAAG,CAACC,YAAY,CAACoB,QAAQ,EAAE;MAAEC,KAAK,EAAEH,YAAY;MAAEV;IAAS,CAAC;EAAE,CAAC,CAAC;AACtK;AACAH,aAAa,CAACiB,WAAW,GAAG,wBAAwB;AACpD,IAAIC,SAAS,GAAG1B,KAAK,CAAC2B,UAAU,CAACnB,aAAa,CAAC;AAC/C,SAASoB,gBAAgBA,CAAC;EAAEnB,EAAE;EAAEC,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,EAAE;EACpE,MAAMC,SAAS,GAAGL,EAAE,IAAI,KAAK;EAC7B,MAAMM,YAAY,GAAGnB,QAAQ,CAAC,CAAC;EAC/B,MAAMoB,KAAK,GAAGD,YAAY,EAAEc,YAAY,IAAIhC,iBAAiB;EAC7D,MAAMsB,MAAM,GAAGlB,OAAO,CAACe,KAAK,CAACI,SAAS,EAAEV,SAAS,CAAC;EAClD,OAAO,eAAgBR,GAAG,CAACY,SAAS,EAAE;IAAE,GAAGF,KAAK;IAAEC,GAAG;IAAEH,SAAS,EAAES,MAAM;IAAER;EAAS,CAAC,CAAC;AACvF;AACAiB,gBAAgB,CAACH,WAAW,GAAG,+BAA+B;AAC9D,IAAIK,YAAY,GAAG9B,KAAK,CAAC2B,UAAU,CAACC,gBAAgB,CAAC;AACrD,SAASG,kBAAkBA,CAAC;EAAEtB,EAAE;EAAEC,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,EAAE;EACtE,MAAMC,SAAS,GAAGL,EAAE,IAAI,MAAM;EAC9B,MAAMM,YAAY,GAAGnB,QAAQ,CAAC,CAAC;EAC/B,MAAM;IAAEU,OAAO;IAAEC,SAAS;IAAEF;EAAM,CAAC,GAAGL,KAAK,CAACgC,UAAU,CAAC7B,YAAY,CAAC;EACpE,MAAMa,KAAK,GAAGD,YAAY,EAAEkB,cAAc,IAAInC,mBAAmB;EACjE,MAAMqB,MAAM,GAAGlB,OAAO,CACpBe,KAAK,CAACI,SAAS,EACfJ,KAAK,CAACX,KAAK,CAACA,KAAK,IAAI,SAAS,CAAC,EAC/BK,SACF,CAAC;EACD,OAAO,eAAgBR,GAAG,CACxBY,SAAS,EACT;IACE,GAAGF,KAAK;IACRC,GAAG;IACHH,SAAS,EAAES,MAAM;IACjB,cAAc,EAAEb,OAAO;IACvB,gBAAgB,EAAEC,SAAS;IAC3BI;EACF,CACF,CAAC;AACH;AACAoB,kBAAkB,CAACN,WAAW,GAAG,iCAAiC;AAClE,IAAIS,cAAc,GAAGlC,KAAK,CAAC2B,UAAU,CAACI,kBAAkB,CAAC;AACzD,IAAII,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACX,SAAS,EAAE;EACnCY,OAAO,EAAER,YAAY;EACrBS,SAAS,EAAEL;AACb,CAAC,CAAC;AACF,IAAIM,aAAa,GAAGL,KAAK;AAEzB,SACEhC,YAAY,EACZ2B,YAAY,EACZI,cAAc,EACdC,KAAK,EACLK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}