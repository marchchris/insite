{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\insite\\\\src\\\\utils\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  _s();\n  const user = useSelector(state => state.auth.value);\n\n  // Directly check the `user` state instead of using a `loading` state.\n  if (user === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this); // Show loading only when the user state is undefined (still fetching).\n  }\n\n  // Render the component if the user is logged in, otherwise redirect to the login page.\n  return user ? Component : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 29\n  }, this);\n};\n_s(ProtectedRoute, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useSelector","jsxDEV","_jsxDEV","ProtectedRoute","element","Component","rest","_s","user","state","auth","value","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/insite/src/utils/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ element: Component, ...rest }) => {\r\n  const user = useSelector((state) => state.auth.value);\r\n\r\n  // Directly check the `user` state instead of using a `loading` state.\r\n  if (user === undefined) {\r\n    return <div>Loading...</div>; // Show loading only when the user state is undefined (still fetching).\r\n  }\r\n\r\n  // Render the component if the user is logged in, otherwise redirect to the login page.\r\n  return user ? Component : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,IAAI,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;;EAErD;EACA,IAAIH,IAAI,KAAKI,SAAS,EAAE;IACtB,oBAAOV,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;;EAEA;EACA,OAAOT,IAAI,GAAGH,SAAS,gBAAGH,OAAA,CAACH,QAAQ;IAACmB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD,CAAC;AAACV,EAAA,CAVIJ,cAAc;EAAA,QACLH,WAAW;AAAA;AAAAmB,EAAA,GADpBhB,cAAc;AAYpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}